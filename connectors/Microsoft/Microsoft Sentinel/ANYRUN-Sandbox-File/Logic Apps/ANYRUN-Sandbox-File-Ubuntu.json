{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "defaultValue": "ANYRUN-Sandbox-File-Windows"
        },
        "azureTenantId": {
            "type": "string",
            "metadata": {
                "description": "Azure Tenant ID for authentication."
            }
        },
        "azureClientId": {
            "type": "string",
            "metadata": {
                "description": "Azure Client ID for authentication."
            }
        },
        "azureClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Azure Client Secret for authentication."
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Key Vault name."
            }
        },
        "keyVaultUri": {
            "type": "string",
            "metadata": {
                "description": "Key Vault URI."
            }
        },
        "azureBlobStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Azure Blob Storage Account Name."
            }
        },
        "azureBlobStorageContainerName": {
            "type": "string",
            "metadata": {
                "description": "Azure Blob Storage Container Name."
            }
        },
        "childWorkflowName": {
            "type": "string",
            "defaultValue": "ANYRUN-Submit-File-to-Blob",
            "metadata": {
                "description": "Name of the child Logic App."
            }
        }
    },
    "variables": {
        "azuresentinelConnectionName": "azuresentinel--anyrun-app",
        "azureblobConnectionName": "azureblob--anyrun-app",
        "keyVaultConnectionName": "keyvault--anyrun-app",
        "azuresentinelApiId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
        "azureblobApiId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]",
        "keyVaultApiId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuresentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('azuresentinelConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('azuresentinelApiId')]"
                },
                "parameterValues": {
                    "token:tenantId": "[parameters('azureTenantId')]",
                    "token:clientId": "[parameters('azureClientId')]",
                    "token:clientSecret": "[parameters('azureClientSecret')]",
                    "token:grantType": "client_credentials"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azureblobConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "api": {
                    "id": "[variables('azureblobApiId')]"
                },
                "displayName": "[variables('azureblobConnectionName')]",
                "parameterValueSet": {
                    "name": "servicePrincipalAuth",
                    "values": {
                        "token:clientId": {
                            "value": "[parameters('azureClientId')]"
                        },
                        "token:clientSecret": {
                            "value": "[parameters('azureClientSecret')]"
                        },
                        "token:TenantId": {
                            "value": "[parameters('azureTenantId')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('keyVaultConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('keyVaultConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('keyVaultApiId')]"
                },
                "parameterValues": {
                    "vaultName": "[parameters('keyVaultName')]",
                    "token:tenantId": "[parameters('azureTenantId')]",
                    "token:clientId": "[parameters('azureClientId')]",
                    "token:clientSecret": "[parameters('azureClientSecret')]",
                    "token:grantType": "client_credentials",
                    "token:resourceUri": "[parameters('keyVaultUri')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Resource": "Microsoft Sentinel",
                "PlaybookTrigger": "Incident",
                "Custom": "ANYRUN",
                "PlaybookType": "Enrichment"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "Azure Tenant ID": {
                            "defaultValue": "[parameters('azureTenantId')]",
                            "type": "String"
                        },
                        "Azure Client ID": {
                            "defaultValue": "[parameters('azureClientId')]",
                            "type": "String"
                        },
                        "Azure Blob Storage Account Name": {
                            "defaultValue": "[parameters('azureBlobStorageAccountName')]",
                            "type": "String"
                        },
                        "Azure Blob Storage Container Name": {
                            "defaultValue": "[parameters('azureBlobStorageContainerName')]",
                            "type": "String"
                        },
                        "Child Logic App": {
                            "defaultValue": "[parameters('childWorkflowName')]",
                            "type": "String"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_Hosts": {
                            "runAfter": {
                                "All_Entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path": "/entities/host"
                            }
                        },
                        "All_Entities": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Entities",
                                        "type": "array",
                                        "value": "@triggerBody()?['object']?['properties']?['relatedEntities']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Main_workflow_variables": {
                            "runAfter": {
                                "Get_secret_-_ANYRUN": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Array Of File Paths",
                                        "type": "array"
                                    },
                                    {
                                        "name": "Suspicious File - FilePath",
                                        "type": "string"
                                    },
                                    {
                                        "name": "Suspicious File - FileName",
                                        "type": "string"
                                    },
                                    {
                                        "name": "UUID",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Filter_array_-_File": {
                            "runAfter": {
                                "Initialize_Additional_Service_Parameters": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@variables('Entities')",
                                "where": "@equals(item()?['kind'],'File')"
                            }
                        },
                        "Parse_JSON_-_File": {
                            "runAfter": {
                                "Filter_array_-_File": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Filter_array_-_File')",
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "kind": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "type": "object",
                                                "properties": {
                                                    "fileName": {
                                                        "type": "string"
                                                    },
                                                    "friendlyName": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "Condition_-_Are_actions_currently_pending": {
                            "actions": {
                                "Terminate": {
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Cancelled"
                                    }
                                }
                            },
                            "runAfter": {
                                "Condition_-_Check_Entities_for_EDR": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Skipped",
                                    "Failed"
                                ]
                            },
                            "else": {
                                "actions": {}
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('Error Handeling')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_and_Set_default_Azure_Parameters": {
                            "runAfter": {
                                "Initialize_Main_workflow_variables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Tenant ID",
                                        "type": "string",
                                        "value": "@{parameters('Azure Tenant ID')}"
                                    },
                                    {
                                        "name": "Client ID",
                                        "type": "string",
                                        "value": "@{parameters('Azure Client ID')}"
                                    },
                                    {
                                        "name": "Storage Account Name",
                                        "type": "string",
                                        "value": "@{parameters('Azure Blob Storage Account Name')}"
                                    },
                                    {
                                        "name": "Container Name",
                                        "type": "string",
                                        "value": "@{parameters('Azure Blob Storage Container Name')}"
                                    },
                                    {
                                        "name": "Subscription ID",
                                        "type": "string",
                                        "value": "@{triggerBody()?['workspaceInfo']?['SubscriptionId']}"
                                    },
                                    {
                                        "name": "Resource Group Name",
                                        "type": "string",
                                        "value": "@{triggerBody()?['workspaceInfo']?['ResourceGroupName']}"
                                    },
                                    {
                                        "name": "Child Logic App Name",
                                        "type": "string",
                                        "value": "@{parameters('Child Logic App')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Additional_Service_Parameters": {
                            "runAfter": {
                                "Initialize_and_Set_default_Azure_Parameters": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Connector Version",
                                        "type": "string",
                                        "value": "1.0.0"
                                    },
                                    {
                                        "name": "Array for Response",
                                        "type": "array"
                                    },
                                    {
                                        "name": "Error Handeling",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Condition_-_Check_Entities_for_EDR": {
                            "actions": {
                                "ANYRUN-Submit-File-to-Blob": {
                                    "type": "Workflow",
                                    "inputs": {
                                        "host": {
                                            "workflow": {
                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', variables('Child Logic App Name'))]"
                                            },
                                            "triggerName": "When_a_HTTP_request_is_received"
                                        }
                                    }
                                },
                                "Parse_JSON_-_EDR_worflow_output": {
                                    "runAfter": {
                                        "ANYRUN-Submit-File-to-Blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@outputs('ANYRUN-Submit-File-to-Blob')",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "statusCode": {
                                                    "type": "integer"
                                                },
                                                "body": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "machineID": {
                                                                "type": "string"
                                                            },
                                                            "fileName": {
                                                                "type": "string"
                                                            },
                                                            "filePath": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "machineID",
                                                            "fileName",
                                                            "filePath",
                                                            "status"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "Filter_array_-_not_uploaded_files": {
                                    "runAfter": {
                                        "Parse_JSON_-_EDR_worflow_output": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Parse_JSON_-_EDR_worflow_output')?['body']",
                                        "where": "@contains(item()?['status'], 'ERROR')"
                                    }
                                },
                                "Filter_array_-_successfully_uploaded_to_Blob": {
                                    "runAfter": {
                                        "Parse_JSON_-_EDR_worflow_output": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Parse_JSON_-_EDR_worflow_output')?['body']",
                                        "where": "@contains(item()['status'], 'SUCCESS')"
                                    }
                                },
                                "For_each_-_detonate_files_to_ANY.RUN_Sandbox": {
                                    "foreach": "@body('Filter_array_-_successfully_uploaded_to_Blob')",
                                    "actions": {
                                        "Get_blob_content_(V2)": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(variables('Storage Account Name')))}/files/@{encodeURIComponent(encodeURIComponent('/',variables('Container Name'),'/',item()['fileName']))}/content",
                                                "queries": {
                                                    "inferContentType": true
                                                }
                                            }
                                        },
                                        "Parse_JSON_-_Get_TaskId": {
                                            "runAfter": {
                                                "HTTP_-_Submit_File_to_ANY.RUN_Sandbox_Ubuntu": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('HTTP_-_Submit_File_to_ANY.RUN_Sandbox_Ubuntu')",
                                                "schema": {
                                                    "type": "object",
                                                    "properties": {
                                                        "error": {
                                                            "type": "boolean"
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "properties": {
                                                                "taskid": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "UUID_-_Save_Task_ID": {
                                            "runAfter": {
                                                "Parse_JSON_-_Get_TaskId": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "UUID",
                                                "value": "@body('Parse_JSON_-_Get_TaskId')?['data']?['taskid']"
                                            }
                                        },
                                        "HTTP_-_Submit_File_to_ANY.RUN_Sandbox_Ubuntu": {
                                            "runAfter": {
                                                "Get_blob_content_(V2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://api.any.run/v1/analysis",
                                                "method": "POST",
                                                "headers": {
                                                    "Authorization": "API-Key @{body('Get_secret_-_ANYRUN')?['value']}",
                                                    "Accept": "application/json"
                                                },
                                                "body": {
                                                    "$content-type": "multipart/form-data",
                                                    "$multipart": [
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"file\"; filename=\"@{item()['fileName']}\""
                                                            },
                                                            "body": "@{body('Get_blob_content_(V2)')}"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"env_os\""
                                                            },
                                                            "body": "linux"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"env_bitness\""
                                                            },
                                                            "body": "64"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"opt_timeout\""
                                                            },
                                                            "body": "240"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"opt_automated_interactivity\""
                                                            },
                                                            "body": "true"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"run_as_root\""
                                                            },
                                                            "body": "true"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"env_version\""
                                                            },
                                                            "body": "22.04.2"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"obj_ext_extension\""
                                                            },
                                                            "body": "false"
                                                        },
                                                        {
                                                            "headers": {
                                                                "Content-Disposition": "form-data; name=\"env_type\""
                                                            },
                                                            "body": "complete"
                                                        }
                                                    ]
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "Add_comment_to_incident_-_Analysis_Started": {
                                            "runAfter": {
                                                "UUID_-_Save_Task_ID": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                    "message": "<p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">ANY.RUN Sandbox Analysis Started:</strong></b></p><p class=\"editor-paragraph\">Analysis of the file @{item()['fileName']} has been initiated in ANY.RUN Sandbox.<br><br>Link to analysis report: https://app.any.run/tasks/@{variables('UUID')}</p>"
                                                },
                                                "path": "/Incidents/Comment"
                                            }
                                        },
                                        "Delete_blob_(V2)": {
                                            "runAfter": {
                                                "Add_comment_to_incident_-_Analysis_Started": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "delete",
                                                "headers": {
                                                    "SkipDeleteIfFileNotFoundOnServer": false
                                                },
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(variables('Storage Account Name')))}/files/@{encodeURIComponent(encodeURIComponent('/',variables('Container Name'),'/',item()['fileName']))}"
                                            }
                                        },
                                        "Delay_-_Wait_for_File_Analysis": {
                                            "runAfter": {
                                                "Delete_blob_(V2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait",
                                            "inputs": {
                                                "interval": {
                                                    "count": 250,
                                                    "unit": "Second"
                                                }
                                            }
                                        },
                                        "Until_File_Analysis_is_not_completed": {
                                            "actions": {
                                                "HTTP-CheckFile-Result": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "https://api.any.run/v1/analysis/monitor/@{variables('UUID')}",
                                                        "method": "GET",
                                                        "headers": {
                                                            "Authorization": "API-Key @{body('Get_secret_-_ANYRUN')?['value']}",
                                                            "x-anyrun-connector": "@concat('MS_Sentinel:', variables('Connector Version'))"
                                                        }
                                                    },
                                                    "runtimeConfiguration": {
                                                        "contentTransfer": {
                                                            "transferMode": "Chunked"
                                                        }
                                                    }
                                                },
                                                "Parse_JSON_-_Is_File_Malicious": {
                                                    "runAfter": {
                                                        "HTTP-CheckFile-Result": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@trim(replace(body('HTTP-CheckFile-Result'), 'data:', ''))",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "task": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "scores": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "verdict": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "threat_level": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "text": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "completed": {
                                                                    "type": "boolean"
                                                                },
                                                                "error": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "Delay_-_Time_added_to_Task": {
                                                    "runAfter": {
                                                        "Parse_JSON_-_Is_File_Malicious": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Wait",
                                                    "inputs": {
                                                        "interval": {
                                                            "count": 60,
                                                            "unit": "Second"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Delay_-_Wait_for_File_Analysis": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": "@equals(body('Parse_JSON_-_Is_File_Malicious')?['completed'], true)",
                                            "limit": {
                                                "count": 10,
                                                "timeout": "PT10M"
                                            },
                                            "type": "Until"
                                        },
                                        "Condition_-_Is_File_Malicious": {
                                            "actions": {
                                                "HTTP-Full-JSON-Report": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "https://api.any.run/v1/analysis/@{variables('UUID')}",
                                                        "method": "GET",
                                                        "headers": {
                                                            "Authorization": "API-Key @{body('Get_secret_-_ANYRUN')?['value']}",
                                                            "x-anyrun-connector": "@concat('MS_Sentinel:', variables('Connector Version'))"
                                                        }
                                                    },
                                                    "runtimeConfiguration": {
                                                        "contentTransfer": {
                                                            "transferMode": "Chunked"
                                                        }
                                                    }
                                                },
                                                "Parse_JSON_-_ANYRUN_Report": {
                                                    "runAfter": {
                                                        "HTTP-Full-JSON-Report": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP-Full-JSON-Report')",
                                                        "schema": {
                                                            "type": "object",
                                                            "properties": {
                                                                "analysis": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "uuid": {
                                                                            "type": "string"
                                                                        },
                                                                        "permanentUrl": {
                                                                            "type": "string"
                                                                        },
                                                                        "reports": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "IOC": {
                                                                                    "type": "string"
                                                                                },
                                                                                "MISP": {
                                                                                    "type": "string"
                                                                                },
                                                                                "HTML": {
                                                                                    "type": "string"
                                                                                },
                                                                                "STIX": {
                                                                                    "type": "string"
                                                                                },
                                                                                "graph": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        },
                                                                        "sandbox": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "plan": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "duration": {
                                                                            "type": "integer"
                                                                        },
                                                                        "creation": {
                                                                            "type": "integer"
                                                                        },
                                                                        "creationText": {
                                                                            "type": "string"
                                                                        },
                                                                        "stopExec": {
                                                                            "type": "integer"
                                                                        },
                                                                        "stopExecText": {
                                                                            "type": "string"
                                                                        },
                                                                        "tags": {
                                                                            "type": "array"
                                                                        },
                                                                        "options": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "timeout": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "additionalTime": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "fakeNet": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "heavyEvasion": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "mitm": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "tor": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "used": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "presentation": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "video": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "hideSource": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "network": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "privacy": {
                                                                                    "type": "string"
                                                                                },
                                                                                "privateSample": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "automatization": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "interactivity": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "scores": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "verdict": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "score": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "threatLevel": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "threatLevelText": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "specs": {
                                                                                    "type": "object",
                                                                                    "properties": {}
                                                                                }
                                                                            }
                                                                        },
                                                                        "content": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "mainObject": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "permanentUrl": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "filename": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "basename": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "info": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ext": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "file": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "mime": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "hashes": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "md5": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "sha1": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "sha256": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "ssdeep": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "video": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "present": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "permanentUrl": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "pcap": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "present": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "permanentUrl": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "sslkeys": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "present": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "screenshots": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "uuid": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "time": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "permanentUrl": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "thumbnailUrl": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "uuid",
                                                                                            "time",
                                                                                            "permanentUrl",
                                                                                            "thumbnailUrl"
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "dumps": {
                                                                                    "type": "array"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "environments": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "os": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "title": {
                                                                                    "type": "string"
                                                                                },
                                                                                "build": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "product": {
                                                                                    "type": "string"
                                                                                },
                                                                                "variant": {
                                                                                    "type": "string"
                                                                                },
                                                                                "productType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "major": {
                                                                                    "type": "string"
                                                                                },
                                                                                "softSet": {
                                                                                    "type": "string"
                                                                                },
                                                                                "bitness": {
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "counters": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "processes": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "total": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "monitored": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "suspicious": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "malicious": {
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        },
                                                                        "network": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "http": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "connections": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "dns": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "threats": {
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        },
                                                                        "files": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "unknown": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "text": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "suspicious": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "malicious": {
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        },
                                                                        "synchronization": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "total": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "operation": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "open": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "create": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "type": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "mutex": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "event": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "processes": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "pid": {
                                                                                "type": "integer"
                                                                            },
                                                                            "important": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "uuid": {
                                                                                "type": "string"
                                                                            },
                                                                            "image": {
                                                                                "type": "string"
                                                                            },
                                                                            "commandLine": {
                                                                                "type": "string"
                                                                            },
                                                                            "fileName": {
                                                                                "type": "string"
                                                                            },
                                                                            "fileType": {
                                                                                "type": "string"
                                                                            },
                                                                            "mainProcess": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "times": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "terminate": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "versionInfo": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "company": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "version": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "context": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "rebootNumber": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "integrityLevel": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "scores": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "verdict": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "score": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "threatLevel": {
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "threatLevelText": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "dropped": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "injected": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "loadsSusp": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "status": {
                                                                                "type": "string"
                                                                            },
                                                                            "exitCode": {
                                                                                "type": "integer"
                                                                            },
                                                                            "hasMalwareConfig": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "modules": {
                                                                                "type": "array"
                                                                            },
                                                                            "synchronization": {
                                                                                "type": "array"
                                                                            },
                                                                            "ppid": {
                                                                                "type": "integer"
                                                                            },
                                                                            "parentUUID": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "pid",
                                                                            "important",
                                                                            "uuid",
                                                                            "image",
                                                                            "commandLine",
                                                                            "fileName",
                                                                            "fileType",
                                                                            "mainProcess",
                                                                            "times",
                                                                            "versionInfo",
                                                                            "context",
                                                                            "scores",
                                                                            "status",
                                                                            "exitCode",
                                                                            "hasMalwareConfig",
                                                                            "modules",
                                                                            "synchronization"
                                                                        ]
                                                                    }
                                                                },
                                                                "malconf": {
                                                                    "type": "array"
                                                                },
                                                                "network": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "dnsRequests": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "time": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "domain": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ips": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "reputation": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "reputationNumber": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "time",
                                                                                    "domain",
                                                                                    "ips",
                                                                                    "reputation"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "httpRequests": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "time": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "method": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "host": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "url": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "ip": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "port": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "proxyDetected": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "status": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "httpCode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "reputation": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "country": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "time",
                                                                                    "method",
                                                                                    "host",
                                                                                    "url",
                                                                                    "ip",
                                                                                    "port",
                                                                                    "proxyDetected",
                                                                                    "status",
                                                                                    "httpCode",
                                                                                    "reputation",
                                                                                    "country"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "connections": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ip": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "port": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "protocol": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "country": {},
                                                                                    "asn": {},
                                                                                    "time": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "process": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "reputation": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "tlsFingerprint": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "ja3": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ja3Fullstring": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ja3S": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ja3SFullstring": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "ip",
                                                                                    "port",
                                                                                    "protocol",
                                                                                    "country",
                                                                                    "asn",
                                                                                    "time",
                                                                                    "reputation"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "threats": {
                                                                            "type": "array"
                                                                        }
                                                                    }
                                                                },
                                                                "modified": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "files": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "time": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "filename": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "size": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "process": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "threatLevel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "time",
                                                                                    "filename",
                                                                                    "size",
                                                                                    "process",
                                                                                    "type",
                                                                                    "threatLevel"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "incidents": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "threatLevel": {
                                                                                "type": "integer"
                                                                            },
                                                                            "title": {
                                                                                "type": "string"
                                                                            },
                                                                            "desc": {
                                                                                "type": "string"
                                                                            },
                                                                            "source": {
                                                                                "type": "string"
                                                                            },
                                                                            "firstSeen": {
                                                                                "type": "integer"
                                                                            },
                                                                            "count": {
                                                                                "type": "integer"
                                                                            },
                                                                            "mitre": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "tid": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "sid": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "v": {}
                                                                                    },
                                                                                    "required": [
                                                                                        "tid",
                                                                                        "sid",
                                                                                        "v"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "events": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "_id": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "oldImage": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "image": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "oldCmdline": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "cmdline": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "time": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "_id",
                                                                                        "oldImage",
                                                                                        "image",
                                                                                        "oldCmdline",
                                                                                        "cmdline",
                                                                                        "time"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "process": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "threatLevel",
                                                                            "title",
                                                                            "desc",
                                                                            "source",
                                                                            "firstSeen",
                                                                            "count",
                                                                            "mitre",
                                                                            "events",
                                                                            "process"
                                                                        ]
                                                                    }
                                                                },
                                                                "debugStrings": {
                                                                    "type": "array"
                                                                },
                                                                "mitre": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "Select_Tags": {
                                                    "runAfter": {
                                                        "Parse_JSON_-_ANYRUN_Report": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Select",
                                                    "inputs": {
                                                        "from": "@body('Parse_JSON_-_ANYRUN_Report')?['data']?['analysis']?['tags']",
                                                        "select": "@item()?['tag']"
                                                    }
                                                },
                                                "Compose_-_All_Tags_File": {
                                                    "runAfter": {
                                                        "Select_Tags": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@union(body('Select_Tags'), createArray('ANY.RUN'))"
                                                },
                                                "For_each_-_Add_Tags_to_Incident_File": {
                                                    "foreach": "@outputs('Compose_-_All_Tags_File')",
                                                    "actions": {
                                                        "Update_incident_-_Add_Tags_to_Incident_File": {
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "put",
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "tagsToAdd": {
                                                                        "TagsToAdd": [
                                                                            {
                                                                                "Tag": "@{items('For_each_-_Add_Tags_to_Incident_File')}"
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "path": "/Incidents"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Compose_-_All_Tags_File": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "HTTP-GetIOC": {
                                                    "runAfter": {
                                                        "For_each_-_Add_Tags_to_Incident_File": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "uri": "https://api.any.run/report/@{variables('UUID')}/ioc/json",
                                                        "method": "GET",
                                                        "headers": {
                                                            "Authorization": "API-Key @{body('Get_secret_-_ANYRUN')?['value']}",
                                                            "x-anyrun-connector": "@concat('MS_Sentinel:', variables('Connector Version'))"
                                                        }
                                                    },
                                                    "runtimeConfiguration": {
                                                        "contentTransfer": {
                                                            "transferMode": "Chunked"
                                                        }
                                                    }
                                                },
                                                "Parse_JSON_-_IOC": {
                                                    "runAfter": {
                                                        "HTTP-GetIOC": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP-GetIOC')",
                                                        "schema": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "category": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "ioc": {
                                                                        "type": "string"
                                                                    },
                                                                    "reputation": {
                                                                        "type": "integer"
                                                                    },
                                                                    "discoveringEntryId": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "Transform_IOC_reputation": {
                                                    "runAfter": {
                                                        "Parse_JSON_-_IOC": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Select",
                                                    "inputs": {
                                                        "from": "@body('Parse_JSON_-_IOC')",
                                                        "select": {
                                                            "ioc": "@item()?['ioc']",
                                                            "type": "@item()?['type']",
                                                            "severity": "@if(equals(item()['reputation'], 0), 'Low', if(equals(item()['reputation'], 1), 'Suspicious', if(equals(item()['reputation'], 2), 'Malicious', 'Low')))"
                                                        }
                                                    }
                                                },
                                                "Filter_Malicious_IOCs": {
                                                    "runAfter": {
                                                        "Transform_IOC_reputation": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('Transform_IOC_reputation')",
                                                        "where": "@equals(item()['severity'], 'Malicious')"
                                                    }
                                                },
                                                "Condition_-_Malicious_IOCs_is_null": {
                                                    "actions": {
                                                        "Filter_Malicious_IOCs_-_ip": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'ip')"
                                                            }
                                                        },
                                                        "Filter_Malicious_IOCs_-_domain": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'domain')"
                                                            }
                                                        },
                                                        "Filter_Malicious_IOCs_-_URL": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'url')"
                                                            }
                                                        },
                                                        "Filter_Malicious_IOCs_-_hash": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'sha256')"
                                                            }
                                                        },
                                                        "Select_Malicious_IOCs_-_hash": {
                                                            "runAfter": {
                                                                "Filter_Malicious_IOCs_-_hash": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs_-_hash')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Malicious_IOCs_to_STIX_-_hash": {
                                                            "runAfter": {
                                                                "Select_Malicious_IOCs_-_hash": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Malicious_IOCs_-_hash')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[file:hashes.''SHA-256'' = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 100
                                                                }
                                                            }
                                                        },
                                                        "Compose_-_STIX_objects_of_Malicious_IOCs_to_TI": {
                                                            "runAfter": {
                                                                "Transform_Malicious_IOCs_to_STIX_-_hash": [
                                                                    "Succeeded"
                                                                ],
                                                                "Transform_Malicious_IOCs_to_STIX_-_ip": [
                                                                    "Succeeded"
                                                                ],
                                                                "Transform_Malicious_IOCs_to_STIX_-_domain": [
                                                                    "Succeeded"
                                                                ],
                                                                "Transform_Malicious_IOCs_to_STIX_-_URL": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Compose",
                                                            "inputs": "@union(if(greater(length(body('Transform_Malicious_IOCs_to_STIX_-_hash')), 0), body('Transform_Malicious_IOCs_to_STIX_-_hash'), json('[]')), if(greater(length(body('Transform_Malicious_IOCs_to_STIX_-_ip')), 0), body('Transform_Malicious_IOCs_to_STIX_-_ip'), json('[]')), if(greater(length(body('Transform_Malicious_IOCs_to_STIX_-_domain')), 0), body('Transform_Malicious_IOCs_to_STIX_-_domain'), json('[]')), if(greater(length(body('Transform_Malicious_IOCs_to_STIX_-_URL')), 0), body('Transform_Malicious_IOCs_to_STIX_-_URL'), json('[]')))"
                                                        },
                                                        "Select_Malicious_IOCs_-_ip": {
                                                            "runAfter": {
                                                                "Filter_Malicious_IOCs_-_ip": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs_-_ip')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Malicious_IOCs_to_STIX_-_ip": {
                                                            "runAfter": {
                                                                "Select_Malicious_IOCs_-_ip": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Malicious_IOCs_-_ip')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[ipv4-addr:value = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 100
                                                                }
                                                            }
                                                        },
                                                        "Select_Malicious_IOCs_-_domain": {
                                                            "runAfter": {
                                                                "Filter_Malicious_IOCs_-_domain": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs_-_domain')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Malicious_IOCs_to_STIX_-_domain": {
                                                            "runAfter": {
                                                                "Select_Malicious_IOCs_-_domain": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Malicious_IOCs_-_domain')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[domain-name:value = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 100
                                                                }
                                                            }
                                                        },
                                                        "Select_Malicious_IOCs_-_URL": {
                                                            "runAfter": {
                                                                "Filter_Malicious_IOCs_-_URL": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Malicious_IOCs_-_URL')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Malicious_IOCs_to_STIX_-_URL": {
                                                            "runAfter": {
                                                                "Select_Malicious_IOCs_-_URL": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Malicious_IOCs_-_URL')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[url:value = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 100
                                                                }
                                                            }
                                                        },
                                                        "Select_-_Chunk_Malicious_IOCs_array": {
                                                            "runAfter": {
                                                                "Compose_-_STIX_objects_of_Malicious_IOCs_to_TI": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@range(0, add(div(length(outputs('Compose_-_STIX_objects_of_Malicious_IOCs_to_TI')), 99), if(equals(mod(length(outputs('Compose_-_STIX_objects_of_Malicious_IOCs_to_TI')), 99), 0), 0, 1)))",
                                                                "select": "@take(skip(outputs('Compose_-_STIX_objects_of_Malicious_IOCs_to_TI'), mul(item(), 99)), 99)"
                                                            }
                                                        },
                                                        "For_each_-_Upload_Malicious_IOCs": {
                                                            "foreach": "@outputs('Select_-_Chunk_Malicious_IOCs_array')['body']",
                                                            "actions": {
                                                                "Threat_Intelligence_-_Upload_Indicators_of_Compromise_(V2)_-_Malicious_IOCs": {
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "body": {
                                                                            "sourcesystem": "ANY.RUN-Sandbox",
                                                                            "indicators": "@item()"
                                                                        },
                                                                        "path": "/V2/ThreatIntelligence/@{encodeURIComponent(triggerBody()?['workspaceId'])}/UploadIndicators/"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Select_-_Chunk_Malicious_IOCs_array": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Filter_Malicious_IOCs": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {}
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@body('Filter_Malicious_IOCs')",
                                                                        ""
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Filter_Suspicious_IOCs": {
                                                    "runAfter": {
                                                        "Transform_IOC_reputation": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('Transform_IOC_reputation')",
                                                        "where": "@equals(item()['severity'], 'Suspicious')"
                                                    }
                                                },
                                                "Condition_-_Suspicious_IOCs_is_null": {
                                                    "actions": {
                                                        "Filter_Suspicious_IOCs_-_ip": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'ip')"
                                                            }
                                                        },
                                                        "Filter_Suspicious_IOCs_-_domain": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'domain')"
                                                            }
                                                        },
                                                        "Filter_Suspicious_IOCs_-_URL": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'url')"
                                                            }
                                                        },
                                                        "Filter_Suspicious_IOCs_-_hash": {
                                                            "type": "Query",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs')",
                                                                "where": "@equals(item()['type'], 'sha256')"
                                                            }
                                                        },
                                                        "Select_Suspicious_IOCs_-_hash": {
                                                            "runAfter": {
                                                                "Filter_Suspicious_IOCs_-_hash": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs_-_hash')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Suspicious_IOCs_to_STIX_-_hash": {
                                                            "runAfter": {
                                                                "Select_Suspicious_IOCs_-_hash": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Suspicious_IOCs_-_hash')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[file:hashes.''SHA-256'' = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 50
                                                                }
                                                            }
                                                        },
                                                        "Compose_-_STIX_objects_of_Suspicious_IOCs_to_TI": {
                                                            "runAfter": {
                                                                "Transform_Suspicious_IOCs_to_STIX_-_hash": [
                                                                    "Succeeded"
                                                                ],
                                                                "Transform_Suspicious_IOCs_to_STIX_-_ip": [
                                                                    "Succeeded"
                                                                ],
                                                                "Transform_Suspicious_IOCs_to_STIX_-_domain": [
                                                                    "Succeeded"
                                                                ],
                                                                "Transform_Suspicious_IOCs_to_STIX_-_URL": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Compose",
                                                            "inputs": "@union(if(greater(length(body('Transform_Suspicious_IOCs_to_STIX_-_hash')), 0), body('Transform_Suspicious_IOCs_to_STIX_-_hash'), json('[]')), if(greater(length(body('Transform_Suspicious_IOCs_to_STIX_-_ip')), 0), body('Transform_Suspicious_IOCs_to_STIX_-_ip'), json('[]')), if(greater(length(body('Transform_Suspicious_IOCs_to_STIX_-_domain')), 0), body('Transform_Suspicious_IOCs_to_STIX_-_domain'), json('[]')), if(greater(length(body('Transform_Suspicious_IOCs_to_STIX_-_URL')), 0), body('Transform_Suspicious_IOCs_to_STIX_-_URL'), json('[]')))"
                                                        },
                                                        "Select_Suspicious_IOCs_-_ip": {
                                                            "runAfter": {
                                                                "Filter_Suspicious_IOCs_-_ip": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs_-_ip')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Suspicious_IOCs_to_STIX_-_ip": {
                                                            "runAfter": {
                                                                "Select_Suspicious_IOCs_-_ip": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Suspicious_IOCs_-_ip')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[ipv4-addr:value = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 50
                                                                }
                                                            }
                                                        },
                                                        "Select_Suspicious_IOCs_-_domain": {
                                                            "runAfter": {
                                                                "Filter_Suspicious_IOCs_-_domain": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs_-_domain')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Suspicious_IOCs_to_STIX_-_domain": {
                                                            "runAfter": {
                                                                "Select_Suspicious_IOCs_-_domain": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Suspicious_IOCs_-_domain')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[domain-name:value = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 50
                                                                }
                                                            }
                                                        },
                                                        "Select_Suspicious_IOCs_-_URL": {
                                                            "runAfter": {
                                                                "Filter_Suspicious_IOCs_-_URL": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Filter_Suspicious_IOCs_-_URL')",
                                                                "select": "@item()?['ioc']"
                                                            }
                                                        },
                                                        "Transform_Suspicious_IOCs_to_STIX_-_URL": {
                                                            "runAfter": {
                                                                "Select_Suspicious_IOCs_-_URL": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@body('Select_Suspicious_IOCs_-_URL')",
                                                                "select": {
                                                                    "type": "indicator",
                                                                    "spec_version": 2.1,
                                                                    "id": "@concat('indicator--', guid())",
                                                                    "created": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "modified": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "pattern": "@concat('[url:value = ''', item(), ''']')",
                                                                    "pattern_type": "stix",
                                                                    "valid_from": "@utcNow('yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "valid_until": "@addDays(utcNow(), 365, 'yyyy-MM-ddTHH:mm:ssZ')",
                                                                    "description": "https://app.any.run/tasks/@{variables('UUID')}",
                                                                    "confidence": 10
                                                                }
                                                            }
                                                        },
                                                        "Select_-_Chunk_Suspicious_IOCs_array": {
                                                            "runAfter": {
                                                                "Compose_-_STIX_objects_of_Suspicious_IOCs_to_TI": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Select",
                                                            "inputs": {
                                                                "from": "@range(0, add(div(length(outputs('Compose_-_STIX_objects_of_Suspicious_IOCs_to_TI')), 99), if(equals(mod(length(outputs('Compose_-_STIX_objects_of_Suspicious_IOCs_to_TI')), 99), 0), 0, 1)))",
                                                                "select": "@take(skip(outputs('Compose_-_STIX_objects_of_Suspicious_IOCs_to_TI'), mul(item(), 99)), 99)"
                                                            }
                                                        },
                                                        "For_each_-_Upload_Suspicious_IOCs": {
                                                            "foreach": "@outputs('Select_-_Chunk_Suspicious_IOCs_array')['body']",
                                                            "actions": {
                                                                "Threat_Intelligence_-_Upload_Indicators_of_Compromise_(V2)_-_Suspicious_IOCs": {
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "body": {
                                                                            "sourcesystem": "ANY.RUN-Sandbox",
                                                                            "indicators": "@item()"
                                                                        },
                                                                        "path": "/V2/ThreatIntelligence/@{encodeURIComponent(triggerBody()?['workspaceId'])}/UploadIndicators/"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Select_-_Chunk_Suspicious_IOCs_array": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Filter_Suspicious_IOCs": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {}
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@body('Filter_Suspicious_IOCs')",
                                                                        ""
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Filter_Unknown_IOCs": {
                                                    "runAfter": {
                                                        "Transform_IOC_reputation": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('Transform_IOC_reputation')",
                                                        "where": "@equals(item()['severity'], 'Low')"
                                                    }
                                                },
                                                "Compose_Sorted_IOCs": {
                                                    "runAfter": {
                                                        "Condition_-_Suspicious_IOCs_is_null": [
                                                            "Succeeded"
                                                        ],
                                                        "Condition_-_Malicious_IOCs_is_null": [
                                                            "Succeeded"
                                                        ],
                                                        "Filter_Unknown_IOCs": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@union(body('Filter_Malicious_IOCs'), body('Filter_Suspicious_IOCs'), body('Filter_Unknown_IOCs'))"
                                                },
                                                "Create_IOC_Table_Rows": {
                                                    "runAfter": {
                                                        "Compose_Sorted_IOCs": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Select",
                                                    "inputs": {
                                                        "from": "@outputs('Compose_Sorted_IOCs')",
                                                        "select": "<tr><td>@{item()['ioc']}</td><td>@{item()['type']}</td><td>@{item()['severity']}</td></tr>"
                                                    }
                                                },
                                                "Compose_IOC_Table": {
                                                    "runAfter": {
                                                        "Create_IOC_Table_Rows": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "<table border='1'><tr><th>IOC</th><th>Type</th><th>Severity</th></tr>@{join(body('Create_IOC_Table_Rows'), '')}</table>"
                                                },
                                                "Add_comment_to_incident_(V3)_-_ANY.RUN_Output": {
                                                    "runAfter": {
                                                        "Compose_IOC_Table": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">ANY.RUN File Detonation Results:</strong></b><br><span style=\"color: rgb(208, 2, 27);\">A malicious File has been detected during ANY.RUN Sandbox analysis</span> (@{item()['fileName']}).</p><br><p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">Verdict:</strong></b> @{body('Parse_JSON_-_Is_File_Malicious')?['task']?['scores']?['verdict']?['text']}<br><b><strong class=\"editor-text-bold\">Threat score:</strong></b> @{body('Parse_JSON_-_ANYRUN_Report')?['data']?['analysis']?['scores']?['verdict']?['score']}/100<br><b><strong class=\"editor-text-bold\">Link to analysis report:</strong></b> https://app.any.run/tasks/@{variables('UUID')}</p><br><p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">Detected IOCs:</strong></b><br>@{outputs('Compose_IOC_Table')}</p>"
                                                        },
                                                        "path": "/Incidents/Comment"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Until_File_Analysis_is_not_completed": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Add_comment_to_incident_(V3)_-_Clean_Scan_File_ANY.RUN_Output": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                "message": "<p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">ANY.RUN File </strong></b><b><strong class=\"editor-text-bold\" style=\"color: rgb(0, 0, 0);\">Detonation</strong></b><b><strong class=\"editor-text-bold\"> Results:</strong></b><br><span style=\"color: rgb(65, 117, 5);\">File is clean and is no malicious activity was found during ANY.RUN Sandbox analysis</span> (@{item()['fileName']}).<br><br>Link to analysis report - https://app.any.run/tasks/@{variables('UUID')}</p>"
                                                            },
                                                            "path": "/Incidents/Comment"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "greater": [
                                                            "@body('Parse_JSON_-_Is_File_Malicious')?['task']?['scores']?['verdict']?['threat_level']",
                                                            0
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('Parse_JSON_-_Is_File_Malicious')?['task']?['scores']?['verdict']?['text']",
                                                                "No threats detected"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Filter_array_-_successfully_uploaded_to_Blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Condition_-_not_uploaded_files": {
                                    "actions": {},
                                    "runAfter": {
                                        "Filter_array_-_not_uploaded_files": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Add_comment_to_incident_(V3)_-_entities_uploaded_with_error": {
                                                "type": "ApiConnection",
                                                "inputs": {
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "body": {
                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                        "message": "<p class=\"editor-paragraph\">The following entities uploaded to Azure Blob Storage with error:</p><br><p class=\"editor-paragraph\">@{body('Filter_array_-_not_uploaded_files')}</p>"
                                                    },
                                                    "path": "/Incidents/Comment"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@empty(body('Filter_array_-_not_uploaded_files'))",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Compose_Data_for_EDR_Workflow": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)_-_Entity_is_empty": {
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                "message": "<p class=\"editor-paragraph\"><b><strong class=\"editor-text-bold\">Incident data don't passed to EDR workflow.</strong></b></p><br><p class=\"editor-paragraph\">One or more parameters is empty.</p>"
                                            },
                                            "path": "/Incidents/Comment"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "or": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@variables('Container Name')",
                                                ""
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@variables('Storage Account Name')",
                                                ""
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('Entities_-_Get_Hosts')?['Hosts']",
                                                ""
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('Parse_JSON_-_File')",
                                                ""
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Compose_Data_for_EDR_Workflow": {
                            "runAfter": {
                                "Parse_JSON_-_File": [
                                    "Succeeded",
                                    "TimedOut",
                                    "Skipped",
                                    "Failed"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "hosts": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                "files": "@outputs('Parse_JSON_-_File')['body']",
                                "containerName": "@variables('Container Name')",
                                "storageAccountName": "@variables('Storage Account Name')",
                                "subscriptionID": "@variables('Subscription ID')",
                                "resourceGroupName": "@variables('Resource Group Name')"
                            }
                        },
                        "Get_secret_-_ANYRUN": {
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('ANYRUN-APIKey')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                                "connectionName": "[variables('azuresentinelConnectionName')]",
                                "id": "[variables('azuresentinelApiId')]"
                            },
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureblobConnectionName'))]",
                                "connectionName": "[variables('azureblobConnectionName')]",
                                "id": "[variables('azureblobApiId')]"
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('keyVaultConnectionName'))]",
                                "connectionName": "[variables('keyVaultConnectionName')]",
                                "id": "[variables('keyVaultApiId')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('azureblobConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('keyVaultConnectionName'))]"
            ]
        }
    ]
}
